#include"head.h"



/*
---------------------------------------------------------------------------------
此文件为程序进行哈夫曼译码主文件
---------------------------------------------------------------------------------
*/


/*
		实现思想，从树的顶点开始遍历，如果碰到输入为0则走向左子树，
		如果碰到1就走向其右子树，检测是否结束，结束的话再次将指针指到
		root结点遍历，直到碰到终止条件：用户输入2。

*/



void decode(hufnode tree[])			//依次读入，根据哈夫曼树译码
{
	hufnode *t;
	int i = 0, j = 0;
	char b[200];
	char endflag = '2';
	getchar();			//结束标志取2				 //从根结点开始往下搜索
	printf("输入编码(以'2'为结束标志)：");
	gets_s(b);
	printf("译码后的字符为:\n");
	t = &tree[0];
	while (b[j] != '2')
	{
		if (b[j] == '0')
		{
			t = t->lchild;
		}			//走向左孩子
		else
		{
			t = t->rchild;
		}			//走向右孩子
		if (t->lchild == NULL)			 //tree[i]是叶结点
		{
			printf("%c", t->info);
			t = &tree[0];			//回到根结点
		}
		j++;
	}
	printf("\n");
	if (tree[j].lchild != NULL && b[j] != '2')			//读完，但尚未到叶子结点
		printf("\n您输入的电文有错请重新输入!\n");		//输入电文有错
}
